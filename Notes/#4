#4.0
라우터란?

예전처럼 모든 url을 app.get()으로 하려니 너무 힘드렁

라우터는 url관리를 쉽게 해주는 
미니 어플리케이션을 만들게 해줌.
도메인별로 나누는게 좋다.

ex) /user/login/edit/~~/~~ 처럼 /으로 구분하는 것 


#4.1
Router 사용법

const taraeRouter = express.Router(); 
const handleGansik = (req, res) => {
    res.send("츄르~");
}
taraeRouter.get("/gansik", handleGansik);

app.use("/tarae", taraeRouter);

라우터는 전처럼 app(= express()).get("/", handle~~)이 아닌, 'Router get'을 사용함.
또한 /gansik이 아닌, /tarae/gansik으로 검색해야 함.


#4.2
clean code
일단 머리속에 있는 소스를 코딩하자
이후 코딩했던 시간 이상 소스를 정리하자


js끼리 import하는 방법
export default ~~~;
;우선 수출한다고 명시를 해야함.

import ~~~ from "./routers/~~~";
;그리고 메인에서 수입


#4.3
; export default는 함수 하나 땡겨올때 쓰는거고
; 함수 여러개를 땡겨오려면
export const ~~1
export const ~~2 
; 땡겨올거 앞에 다 export붙여주고

import { ~~1, ~~2 } from "./~~/~~"; 
; 위 처럼 수입 해오면 됨

참고로 const 변수에서 new나 delete같은건 못씀
이미 js에 있는거라


#4.7
parameter
url에 변수 넣을 수 있게 해줌.
"/video/:id/root" 처럼 : 넣어주면 됨

#4.8
:ab*cd 
(= *에는 아무값이나 들어갈 수 있음, abTaraecd)

:ab+cd
(= +앞인 b가 엄청 많아도 됨, abbbbbbbbcd)

:ab?cd
(= b가 선택 사항임. abcd, acd 모두 가능)

:a(bc)?de
(= 위와 동일, 그룹 단위로 선택 사항)

:(Tarae\w+)
(= Tarae이후에 어떤 단어가 와도 됨)

:(\d+)
(= 숫자만)

js에서 사용할 땐, (\\d+) 로 적어야 함